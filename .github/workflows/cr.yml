name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    # if: ${{ (github.event_name == 'pull_request' && github.event.action == 'opened') || contains(github.event.comment.body, 'review') }}
    runs-on: ubuntu-latest
    steps:
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: English
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: gpt-4
          PROMPT: |
            As a code reviewer, please analyze this PR focusing on these key aspects:

            Code Quality

            Readability (naming, documentation, code organization)
            Complexity and maintainability
            Design patterns and best practices
            Performance

            Time and space complexity
            Resource usage and optimization opportunities
            Database queries and data access patterns
            Caching considerations
            Security

            Input validation and sanitization
            Authentication and authorization
            Data exposure risks
            Common security vulnerabilities (XSS, CSRF, SQL injection, etc.)
            Logic and Business Requirements

            Edge cases and error handling
            Business rule implementation
            Integration points
            Test coverage
            Please provide:

            Specific issues found, categorized by severity (Critical/High/Medium/Low)
            Provide code snippets demonstrating suggested improvements
            Alternative approaches or design considerations where relevant
            References to documentation or best practices when applicable
            Focus only on areas needithat needsng improvement
            Don't mention the good parts
            Don't mention aspects that look good, don't have any issue or don't need improvment
          top_p: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-top_p
          temperature: 1 # https://platform.openai.com/docs/api-reference/chat/create#chat/create-temperature
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000 # if the patch/diff length is large than MAX_PATCH_LENGTH, will be ignored and won't review. By default, with no MAX_PATCH_LENGTH set, there is also no limit for the patch/diff length.
          IGNORE_PATTERNS: /node_modules,*.md # Regex pattern to ignore files, separated by comma